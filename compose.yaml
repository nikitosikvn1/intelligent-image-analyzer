version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./certs:/etc/rabbitmq/certs
      - /var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5671:5671
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping", "-q"]
      interval: 5s
      timeout: 1s
      retries: 5
  
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 1s
      retries: 3

  api-gateway-svc:
    container_name: api-gateway-svc
    image: api-gateway-svc
    build:
      context: ./api-gateway-svc
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
    depends_on:
      rabbitmq:
        condition: service_healthy
  
  auth-svc:
    build:
      context: ./auth-svc
    environment:
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  
  grpc_cv_service:
    container_name: grpc-cv-service
    build:
      context: ./grpc-vision-svc
      target: final
    volumes:
      - /home/${USER}/.cache/huggingface/:/nonexistent/.cache/huggingface/ # Use cached models from host
    ports:
      - 50051:50051
    environment:
      - RUST_LOG=DEBUG
      - VISION_ADDR=[::]:50051
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

volumes:
  postgres_data:
